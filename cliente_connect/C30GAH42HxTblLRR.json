{
  "createdAt": "2025-03-14T00:12:35.624Z",
  "updatedAt": "2025-03-20T01:58:16.722Z",
  "id": "C30GAH42HxTblLRR",
  "name": "Fluxo Base de Whatsapp - D21D",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "content": "SETAR VARÍÁVEIS\n",
        "height": 520,
        "width": 1940,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1860,
        -320
      ],
      "id": "aaf6de75-0b31-4f9f-a6d9-7c3327177f32",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d21d",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1800,
        -120
      ],
      "id": "b24609b2-dfa2-49b4-9a30-c836d8009f98",
      "name": "Webhook",
      "webhookId": "43605103-f50c-4293-86a4-8a12ce130726"
    },
    {
      "parameters": {
        "content": "FILTROS\n",
        "height": 520,
        "width": 1020,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        -320
      ],
      "id": "692403a2-7f0c-4819-bd8a-ee2234abe49b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "197d384d-c4c1-40d0-8ee2-b62e5af3c05c",
              "name": "userName",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "57233cf4-2452-4455-bccb-ea83e9fca64e",
              "name": "userNumber",
              "value": "={{ $json.body.sender.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "e78ef7e8-a0c9-4350-9060-93e503e6e16c",
              "name": "messageSender",
              "value": "={{ $json.body.data.key.remoteJid.split('@')[0] }}\n\n",
              "type": "string"
            },
            {
              "id": "11c94d0a-7238-4e75-b0d4-ce004f01a53b",
              "name": "fromMe",
              "value": "={{ $json.body.data.key.fromMe ? 'outgoing' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "9fa17f5a-6ea4-47b4-b2ba-f419fa32bd1d",
              "name": "messageContent",
              "value": "={{ $json.body.data.message.audioMessage.mimetype }}",
              "type": "string"
            },
            {
              "id": "05a34ef6-b52f-47be-a05c-a43422685f91",
              "name": "messageType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "729b66e5-b9c6-4e33-a24f-206f7d46f3f4",
              "name": "messageID",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "03ccb2c8-2b94-4bd4-90f0-de118a00706f",
              "name": "messageTimestamp",
              "value": "={{ $json.body.data.messageTimestamp }}",
              "type": "number"
            },
            {
              "id": "54ca0173-3d29-40a9-83e5-91ffe2f68580",
              "name": "messageMimetype",
              "value": "={{ $json.body.data.message.audioMessage.mimetype }}",
              "type": "string"
            },
            {
              "id": "a10a52fe-1469-4c41-a789-29ddeafdebf0",
              "name": "messageTimeOut",
              "value": "10",
              "type": "string"
            },
            {
              "id": "1ae0bf16-ba78-402d-bfe1-91315cc3cf1f",
              "name": "messageAtendimentoHumano",
              "value": "720",
              "type": "string"
            },
            {
              "id": "ec98d971-219d-47be-80af-d1c8d389d3cc",
              "name": "apiToken",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "8bee3b72-d27c-4427-883e-823de5e9bd86",
              "name": "apiBaseURL",
              "value": "https://primary-production-1821.up.railway.app",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1600,
        -120
      ],
      "id": "5cf627eb-e32d-445a-aaa5-833f5b25cd87",
      "name": "SET_VARIAVEIS"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e543a6db-34dd-4dc7-bfe2-bac2b5d0a614",
              "leftValue": "={{ $('SET_VARIAVEIS').item.json.fromMe }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        -120
      ],
      "id": "c7e382b7-268f-4ec9-b5d7-6ece3e0f8ac0",
      "name": "INCOMING?"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=atendimento:{{ $('INCOMING?').item.json.userNumber }}",
        "value": "true",
        "expire": true,
        "ttl": "={{ $('SET_VARIAVEIS').item.json.messageAtendimentoHumano }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        560,
        40
      ],
      "id": "2b89a56e-cd4e-4ad0-9d02-15767dcb149d",
      "name": "SET_ATENDIMENTO",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "atendimento",
        "key": "={{ $('SET_PAYLOAD').item.json.sessionID }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        540,
        -280
      ],
      "id": "e7fc5866-70ef-4110-ac34-c45f6d9ab3ab",
      "name": "GET_ATENDIMENTO",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e4a279cb-3b64-410b-a8b9-873e10acbdd6",
              "leftValue": "={{ $json.atendimento }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        760,
        -280
      ],
      "id": "99c21a6b-6973-4273-9398-fc726048a874",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        840,
        40
      ],
      "id": "6870a423-4076-49fc-8e8a-ce6e5054e3c9",
      "name": "ESPERAR"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ce32791-d1f5-41f7-9bb8-3eb1e1097575",
              "name": "base64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1160,
        -280
      ],
      "id": "51f60788-3f85-4afe-84de-036b904bd287",
      "name": "EXTRAI_BASE64"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "49e69490-7950-4c8b-ad0d-99d706bc0537"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "87508378-704a-4b8c-82bc-9d64696c6c16",
                    "leftValue": "{{ $json.messageType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dbb1f51d-6e8b-421c-aaa6-951f9f45a867",
                    "leftValue": "{{ $json.messageType }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "de54aefd-528b-4f83-9aee-a7bd788d896a",
                    "leftValue": "{{ $json.messageType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2fcad5f4-6332-4bc6-aeb4-9ab55e91419f",
                    "leftValue": "{{ $json.messageType }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1400,
        -160
      ],
      "id": "42b3f8b4-87b1-444c-8bf2-ca85569a92bd",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "audioOGG",
          "mimeType": "=audio/ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1000,
        -280
      ],
      "id": "4fd7b155-22fd-4de5-bb48-739389c5ed26",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -360,
        -160
      ],
      "id": "780edf01-d722-4ab5-bf9d-87af7e16faf2",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -820,
        -280
      ],
      "id": "0b31d863-6693-40f7-84d0-9b0790346360",
      "name": "TRANSCREVER_AUDIO",
      "credentials": {
        "openAiApi": {
          "id": "Ug76Jt0WOP7E4x1r",
          "name": "OpenAi - Connecta"
        }
      }
    },
    {
      "parameters": {
        "content": "TRANSCRIÇÃO BASE64 - EVOLUTION\n",
        "width": 1020,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1200,
        -540
      ],
      "id": "132aeea1-8733-41cf-abdb-05eb70d0855a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2e3595b1-a095-4762-909f-e3b0a12734de",
              "name": "userMessage",
              "value": "={{ $json.payload }}",
              "type": "string"
            },
            {
              "id": "c3c040e4-465d-4de6-95a7-cd86585bb6cb",
              "name": "sessionID",
              "value": "={{ $('Switch').item.json.messageSender }}",
              "type": "string"
            },
            {
              "id": "3a19f6e5-92e9-448b-98ec-1d445466ecb6",
              "name": "messageTimestamp",
              "value": "={{ $('Switch').item.json.messageTimestamp }}",
              "type": "string"
            },
            {
              "id": "3727f105-a785-48f7-a34a-f4175918cd61",
              "name": "messageID",
              "value": "={{ $('Switch').item.json.messageID }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -120,
        -120
      ],
      "id": "df2f2cca-4bc7-4833-a310-da1463af5bd0",
      "name": "SET_PAYLOAD"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b8161c56-ebd6-4af3-a479-57ee3f7fd968",
              "name": "payload",
              "value": "={{ JSON.stringify({ userMessage: $json.text,\nmessageTimestamp: $('SET_VARIAVEIS').item.json.messageTimestamp, messageId: $('SET_VARIAVEIS').item.json.messageID })}}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        -280
      ],
      "id": "9977410e-9600-4664-b87b-7592bf7c0886",
      "name": "Audio Data"
    },
    {
      "parameters": {
        "content": "ESPERANDO MENDAGEM\n",
        "height": 520,
        "width": 1180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1140,
        -320
      ],
      "id": "d8a8a6b7-8a49-4b1d-bffe-47689432272b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=temporario.{{ $('SET_PAYLOAD').item.json.sessionID }}",
        "messageData": "={{ $('SET_PAYLOAD').item.json.userMessage }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        860,
        -1040
      ],
      "id": "035a289b-a2a5-4d26-ae26-9da997b0e046",
      "name": "PUSH",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messagens",
        "key": "=temporario.{{ $('SET_PAYLOAD').item.json.sessionID }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1040,
        -1040
      ],
      "id": "4e8f684b-6e04-45b6-97d0-a6f816d27227",
      "name": "GET",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.messagens?.first() || '{}').messageId }}",
                    "rightValue": "={{ $('SET_VARIAVEIS').item.json.messageID }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "cc9fe878-645b-44d0-8e5f-c53ecf9e9863"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f5830cee-4806-44c6-9c32-78ad726edc91",
                    "leftValue": "={{DateTime.fromSeconds(JSON.parse($json.messagens?.last() || '{}').messageTimestamp)}}\n",
                    "rightValue": "={{$now.minus(15, seconds)}}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Segue"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Espera"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1220,
        -1040
      ],
      "id": "4b45c55b-4ae7-4395-8bc2-65d10e52eaa3",
      "name": "SWITCH_BUFFER"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1440,
        -860
      ],
      "id": "b48f1cbd-c860-44e9-81bc-d1be98334efb",
      "name": "Wait",
      "webhookId": "9cc1e839-f122-4131-98f3-e0fc6389f829"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=temporario.{{ $('SET_PAYLOAD').item.json.sessionID }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1440,
        -1040
      ],
      "id": "e8bd2e48-44e0-4da3-a94b-a14be14dcb6d",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "temporario.{{ $('SET_PAYLOAD').item.json.sessionID }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        340,
        -820
      ],
      "id": "fcba2a03-5e85-49d4-9e45-c092fcc235e8",
      "name": "PUSH1",
      "credentials": {
        "redis": {
          "id": "68kS7JueUisb4P6J",
          "name": "Redis - d21d"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('SET_PAYLOAD').item.json.sessionID }}",
        "messageData": "={{ $('SET_PAYLOAD').item.json.userMessage }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1480,
        -140
      ],
      "id": "359b417f-42c4-47c4-a274-a7caf05627eb",
      "name": "Push Messages",
      "credentials": {
        "redis": {
          "id": "xOCLtYh6T6QG0qLM",
          "name": "Redis - Connect"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ (() => { \n    const messages = $json.messages || []; // Array de mensagens\n\n    if (messages.length > 0) {\n        try {\n            // Retorna o tipo e o conteúdo inicial da mensagem para depuração\n            let firstMessageEscaped = messages[0];\n            let debugInfo = `Tipo de messages[0]: ${typeof firstMessageEscaped} | Valor: ${firstMessageEscaped}`;\n\n            // Se for string, fazer o parse\n            if (typeof firstMessageEscaped === 'string') {\n                firstMessageEscaped = JSON.parse(firstMessageEscaped);\n                debugInfo += ` | Após primeiro JSON.parse: ${JSON.stringify(firstMessageEscaped)}`;\n            }\n\n            // Se ainda for string, fazer outro parse (caso tenha dupla serialização)\n            let firstMessage = firstMessageEscaped;\n            if (typeof firstMessageEscaped === 'string') {\n                firstMessage = JSON.parse(firstMessageEscaped);\n                debugInfo += ` | Após segundo JSON.parse: ${JSON.stringify(firstMessage)}`;\n            }\n\n            // Retorna o messageId ou debugInfo\n            return firstMessage.messageId || `messageId não encontrado | ${debugInfo}`;\n        } catch (error) {\n            return `Erro no parsing: ${error.message}`;\n        }\n    }\n    \n    return \"Array vazio\";\n})()}}",
                    "rightValue": "={{ $('SET_VARIAVEIS').item.json.messageID }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "0882e4f5-aa91-46be-a73c-386792f7b19b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nothing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ec3063b2-cc0d-468d-8af2-022500faec37",
                    "leftValue": "={{ \n  (() => {\n    // 1. Acessar o campo `messages` no JSON\n    const messages = $json.messages;\n\n    // 2. Verificar se `messages` existe e é uma array\n    if (!messages || !Array.isArray(messages) || messages.length === 0) {\n      return 'Erro: Campo `messages` está vazio ou ausente.';\n    }\n\n    // 3. Pegar o último item da array\n    const lastItem = messages[messages.length - 1];\n\n    // 4. Verificar se `lastItem` é uma string válida\n    if (!lastItem || typeof lastItem !== 'string') {\n      return 'Erro: Último item não é uma string válida.';\n    }\n\n    // 5. Limpar os caracteres de escape e remover aspas externas\n    const cleanedItem = lastItem\n      .replace(/^\"|\"$/g, '') // Remove aspas externas\n      .replace(/\\\\\"/g, '\"')  // Substitui \\\" por \"\n      .replace(/\\\\\\\\/g, '\\\\'); // Substitui \\\\ por \\\n\n    // 6. Parsear o JSON\n    let parsedItem;\n    try {\n      parsedItem = JSON.parse(cleanedItem);\n    } catch (e) {\n      return `Erro: Não foi possível parsear o JSON do último item (${e.message}).`;\n    }\n\n    // 7. Extrair o campo `messageTimestamp`\n    const timestamp = parsedItem.messageTimestamp;\n    if (!timestamp) {\n      return 'Erro: Campo `messageTimestamp` não encontrado.';\n    }\n\n    // 8. Converter o timestamp para ISO 8601\n    try {\n      return new Date(Number(timestamp)).toISOString();\n    } catch (e) {\n      return 'Erro: Não foi possível converter o timestamp.';\n    }\n  })()\n}}",
                    "rightValue": "={{ \n    (() => {\n        const now = new Date(); // Obtém a data e hora atual\n        now.setSeconds(now.getSeconds() - 30); // Subtrai 30 segundos\n        return `${now.toISOString()}`; // Retorna no formato ISO\n    })() \n}}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continue"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Wait"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1820,
        -140
      ],
      "id": "26992a4d-6a33-45d8-b9b4-4d2e9fb5db6d",
      "name": "Verify Buffer Status"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('RabbitMQ Trigger').item.json.sessionID }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2040,
        -140
      ],
      "id": "a3dbf5c4-cfa2-4c23-8716-2d091aa4ab58",
      "name": "Delete Buffer",
      "credentials": {
        "redis": {
          "id": "xOCLtYh6T6QG0qLM",
          "name": "Redis - Connect"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2040,
        -300
      ],
      "id": "f9ab12e1-057f-4a95-9a2a-0ffc78da7a05",
      "name": "Nothing"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('SET_VARIAVEIS').item.json.userNumber }}",
        "keyType": "list",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1640,
        -140
      ],
      "id": "fa2ccbdb-0542-47ff-b671-f4090c6900f0",
      "name": "Get_Messages",
      "credentials": {
        "redis": {
          "id": "xOCLtYh6T6QG0qLM",
          "name": "Redis - Connect"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1320,
        -140
      ],
      "id": "af66d39a-ad8c-44e7-a8c9-a5c66708f6ec",
      "name": "Wait2",
      "webhookId": "178f389c-a56e-47f7-b247-f704946c9259"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "SET_VARIAVEIS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET_VARIAVEIS": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "INCOMING?": {
      "main": [
        [
          {
            "node": "GET_ATENDIMENTO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SET_ATENDIMENTO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET_ATENDIMENTO": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ESPERAR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXTRAI_BASE64": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "EXTRAI_BASE64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "TRANSCREVER_AUDIO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "SET_PAYLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TRANSCREVER_AUDIO": {
      "main": [
        [
          {
            "node": "Audio Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET_PAYLOAD": {
      "main": [
        [
          {
            "node": "INCOMING?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PUSH": {
      "main": [
        [
          {
            "node": "GET",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET": {
      "main": [
        [
          {
            "node": "SWITCH_BUFFER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SWITCH_BUFFER": {
      "main": [
        [],
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "GET",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Push Messages": {
      "main": [
        [
          {
            "node": "Get_Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Buffer Status": {
      "main": [
        [
          {
            "node": "Nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Messages": {
      "main": [
        [
          {
            "node": "Verify Buffer Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Push Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "primary-production-1821.up.railway.app",
            "user-agent": "axios/1.7.9",
            "content-length": "5011",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "146.190.59.46",
            "x-forwarded-host": "primary-production-1821.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/us-west1",
            "x-railway-request-id": "23ctLgpmQjmZ1nhll_AzuA_2654280189",
            "x-real-ip": "146.190.59.46",
            "x-request-start": "1742434073633"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Ofir",
            "data": {
              "key": {
                "remoteJid": "5511985401987@s.whatsapp.net",
                "fromMe": false,
                "id": "346038603FF0A48B47296FF6E9107ABC"
              },
              "pushName": "Dival S Filho 😎",
              "status": "DELIVERY_ACK",
              "message": {
                "audioMessage": {
                  "url": "https://mmg.whatsapp.net/v/t62.7117-24/22559346_2271732919875621_190724801515475685_n.enc?ccb=11-4&oh=01_Q5AaIQfKkJt_dllz9v7S8_cl3ianTz_5xU5F35O1h8njy-uH&oe=6802E094&_nc_sid=5e03e0&mms3=true",
                  "mimetype": "audio/ogg; codecs=opus",
                  "fileSha256": "mv61Q/3LZnl9ydTAk9+d9cCWXZfNinAywwGkR5Li8AA=",
                  "fileLength": "2472",
                  "seconds": 1,
                  "ptt": true,
                  "mediaKey": "oMTp8yJrpSg1OxdR0KIjWP12QdU5JSftGsv990Gjwjs=",
                  "fileEncSha256": "8oaItfDlbu0TG6R7cMjib75a09b+RYDka7HlAOHsntc=",
                  "directPath": "/v/t62.7117-24/22559346_2271732919875621_190724801515475685_n.enc?ccb=11-4&oh=01_Q5AaIQfKkJt_dllz9v7S8_cl3ianTz_5xU5F35O1h8njy-uH&oe=6802E094&_nc_sid=5e03e0",
                  "mediaKeyTimestamp": "1742434072",
                  "waveform": "AAAAAAAAAAAAAAAAAAAAAAABAhInPENDQz86NS4nHx8nLzEvLSsoJigxOkFERkdGRUNCQUBBQ0REQ0AqFAArQw=="
                },
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "1Ap1zzec0Ceisg==",
                    "senderTimestamp": "1741317792",
                    "recipientKeyHash": "uW1XRMx6LXFzNw==",
                    "recipientTimestamp": "1742009060"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "T05xJxTFJUvLdsdYA3akuK/utZqQKkl0Y8gTxgfveFk="
                },
                "base64": "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"
              },
              "contextInfo": null,
              "messageType": "audioMessage",
              "messageTimestamp": 1742434073,
              "instanceId": "1f617cf7-0352-442c-8759-1dd6a92b586c",
              "source": "android"
            },
            "destination": "https://primary-production-1821.up.railway.app/webhook/d21d",
            "date_time": "2025-03-19T22:27:53.519Z",
            "sender": "5511932081209@s.whatsapp.net",
            "server_url": "https://dinastia-evolution.lfigsi.easypanel.host",
            "apikey": "199604EDFDB7-477B-9F21-8DB8DB4A060D"
          },
          "webhookUrl": "https://primary-production-1821.up.railway.app/webhook/d21d",
          "executionMode": "production"
        }
      }
    ]
  },
  "versionId": "c28b0c07-59bc-428a-82ad-9e7052e1b900",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-03-10T16:43:32.633Z",
      "updatedAt": "2025-03-10T16:43:32.633Z",
      "id": "L307GdwEDRROFLG5",
      "name": "Criador Digital"
    },
    {
      "createdAt": "2025-03-17T19:34:03.740Z",
      "updatedAt": "2025-03-17T19:34:03.740Z",
      "id": "M3oF1hF2pAN9SLRE",
      "name": "D21D"
    }
  ]
}